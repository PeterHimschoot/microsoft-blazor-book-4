@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services

@inject LazyAssemblyLoader lazyAssemblyLoader

<Router AppAssembly="@typeof(App).Assembly"
        AdditionalAssemblies="@additionalAssemblies"
        OnNavigateAsync="NavigateAsync">
  <Found Context="routeData">
    <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    <FocusOnNavigate RouteData="@routeData" Selector="h1" />
  </Found>
  <NotFound>
    <PageTitle>Not found</PageTitle>
    <LayoutView Layout="@typeof(MainLayout)">
      <p role="alert">Sorry, there's nothing at this address.</p>
    </LayoutView>
  </NotFound>
  <Navigating>
    Loading additional components...
  </Navigating>
</Router>

@code {
  List<Assembly> additionalAssemblies = []; // [typeof(Counter).Assembly];

  List<string> lazyLoadedRoutes = ["counter", "weather"];

  private async Task NavigateAsync(NavigationContext context)
  {
    if (lazyLoadedRoutes.Contains(context.Path.ToLower()))
    {
      var assemblies = await lazyAssemblyLoader.LoadAssembliesAsync(["BlazorApp.LazyLoadedComponents.wasm"]);
      additionalAssemblies.AddRange(assemblies);
    }
  }
}
